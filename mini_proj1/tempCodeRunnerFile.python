import pandas as pd
import numpy as np

# Set random seed for reproducibility
np.random.seed(42)

# Generate synthetic data for 30 participants (15 with ASD, 15 control)
n_participants = 30
n_trials = 10

# Create empty lists to store data
data = []

for participant_id in range(n_participants):
    is_asd = participant_id < 15  # First 15 participants are ASD group
    
    # Simulate different patterns for ASD vs control group
    # Based on common findings in autism eye-tracking research
    for trial in range(n_trials):
        # ASD group typically shows:
        # - Reduced fixation duration on social stimuli
        # - More time looking at non-social elements
        # - More rapid shifts between fixation points
        if is_asd:
            social_fixation_time = np.random.normal(1.2, 0.3)  # seconds
            nonsocial_fixation_time = np.random.normal(2.5, 0.4)
            saccade_velocity = np.random.normal(400, 50)  # degrees per second
            fixation_count = np.random.randint(8, 15)
            time_to_first_fixation = np.random.normal(0.4, 0.1)
        else:
            social_fixation_time = np.random.normal(2.4, 0.3)
            nonsocial_fixation_time = np.random.normal(1.3, 0.3)
            saccade_velocity = np.random.normal(300, 40)
            fixation_count = np.random.randint(5, 10)
            time_to_first_fixation = np.random.normal(0.2, 0.05)
        
        data.append({
            'participant_id': f'P{participant_id:03d}',
            'group': 'ASD' if is_asd else 'Control',
            'trial': trial + 1,
            'social_fixation_duration': max(0, social_fixation_time),
            'nonsocial_fixation_duration': max(0, nonsocial_fixation_time),
            'saccade_velocity': max(0, saccade_velocity),
            'fixation_count': fixation_count,
            'time_to_first_fixation': max(0, time_to_first_fixation),
            'age': np.random.randint(18, 45),
            'gender': np.random.choice(['M', 'F']),
            'ados_score': np.random.normal(15, 3) if is_asd else np.random.normal(2, 1)
        })

# Create DataFrame
df = pd.DataFrame(data)

# Add some missing values to make it more realistic
mask = np.random.random(len(df)) < 0.05
df.loc[mask, 'social_fixation_duration'] = np.nan

# Display first few rows and basic statistics
print("\nFirst few rows of the dataset:")
print(df.head())
print("\nBasic statistics:")
print(df.groupby('group').agg({
    'social_fixation_duration': ['mean', 'std'],
    'nonsocial_fixation_duration': ['mean', 'std'],
    'saccade_velocity': ['mean', 'std'],
    'fixation_count': ['mean', 'std']
}))